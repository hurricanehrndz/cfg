set -g default-terminal "tmux-256color"
#  enable terminal compatibility with outside terminal
set -as terminal-overrides ',xterm*:Tc'
set  -g base-index      1
setw -g pane-base-index 1

# List fof plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'schasse/tmux-jump'

set -g status-keys vi
set -g mode-keys   vi

# rebind main key: C-a
unbind C-b
set -g prefix C-a
bind a send-prefix
bind C-a last-window

setw -g aggressive-resize on
setw -g clock-mode-style  12
set  -s escape-time       500
set  -g history-limit     10000

# extrakto plugin settings
# ---------------------
set -g set-clipboard on

set -g @extrakto_clip_tool_run "tmux_osc52"
set -g @extrakto_clip_tool "auto"
set -g @extrakto_popup_size "65%"
set -g @extrakto_grab_area "window 500"


# Reload tmux.conf
bind r source-file $HOME/.config/tmux/tmux.conf \; display "TMUX conf reloaded!"

# begin selection with v, yank with y
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
{{- if (eq .chezmoi.os "darwin") -}}
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
{{ else -}}
is_vim="ps -o state=,tty=,comm= | grep -iqE '^[^TXZ ]+ +#{s|/dev/||:pane_tty}\s+(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
{{ end -}}

bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R

# easily rotate window
bind-key -n 'M-o' rotate-window

# easily zoom
bind-key -n 'M-z' resize-pane -Z

# shell
set-option -g default-shell "{{ env "SHELL" }}"

# neovim recommendations - checkhealth
set-option -sg escape-time 0
set-option -g focus-events on
#set -g default-terminal 'tmux-256color'
set -sa terminal-overrides ',xterm*:RGB'

# resize panes more easily
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# toggle status bar
bind-key ^s { set-option status }

# update environment
set-option -g update-environment "SSH_AUTH_SOCK \
                                  SSH_CONNECTION \
                                  DISPLAY"

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
# bind c new-window -c "#{pane_current_path}"

# theme - pane border
# https://cassidy.codes/blog/2019-08-03-tmux-colour-theme/
set -g pane-border-style fg='#5ccfe6'
set -g pane-active-border-style fg='#ff3333'
# theme - message text
set -g message-style bg='#191e2a',fg='#5ccfe6'
# theme - status line
set -g status-style bg='#191e2a',fg='#707a8c'
set -g status-interval 5

# theme - current window
set -g window-status-current-format "#[fg=#191e2a]#[bg=#ff3333] #I:#W "
set -g window-status-format "#[fg=#8A9199]#[bg=#191e2a] #I:#W "

# status left
# are we controlling tmux or the content of the panes?
set -g status-left '#[bg=#cbccc6]#[fg=#101521]#{?client_prefix,#[bg=#bae67E],}  '
# are we zoomed into a pane?
set -ga status-left '#[bg=#191e2a]#[fg=#bae67E]#{?window_zoomed_flag, ↕ ,   }'


# Initialize TMUX plugin manager
TPM_HOME="$HOME/.config/tmux/plugins/tpm"

if-shell "test ! -d #{TPM_HOME}" {
   run-shell "mkdir -p #{TPM_HOME}"
   run-shell "git clone https://github.com/tmux-plugins/tpm #{TPM_HOME}"
}

run '#{TPM_HOME}/tpm'
